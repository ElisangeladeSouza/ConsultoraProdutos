[main]
authc.loginUrl = /login.xhtml
authc.successUrl=/Home.xhtml?faces-redirect=true

authc.usernameParam = userName
authc.passwordParam = password

#Habilitando o shiro para comparar senhas "hasheadas"
# define matcher matching hashes instead of passwords
sha256Matcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
sha256Matcher.hashAlgorithmName=SHA-256
# enable matcher in iniRealm (object responsible for authentication)
iniRealm.credentialsMatcher = $sha256Matcher

# replace form authentication filter with verbose filter 
authc = br.com.projetospessoais.consultoraprodutos.util.shiro.MyFormAuthenticationFilter
# request parameter with login error information; if not present filter assumes 'shiroLoginFailure'
authc.failureKeyAttribute=simpleShiroApplicationLoginFailure

# Let's use some in-memory caching to reduce the number of runtime lookups against Stormpath.  A real
# application might want to use a more robust caching solution (e.g. ehcache or a distributed cache).  When using such
# caches, be aware of your cache TTL settings: too high a TTL and the cache won't reflect any potential
# changes in Stormpath fast enough.  Too low and the cache could evict too often, reducing performance.
cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager

#O padrão é: usuario=senha,permissão
[users]
Admin=a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3,Adm

[urls]
/ConsultoraProdutos/**=authc
/login.xhtml = authc
/logout = logout